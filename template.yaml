AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  todoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: todos
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  GetTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getTodo/
      Handler: getTodo
      Runtime: go1.x
      Events:
        getTodoApi:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref todoDB
  GetTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getTodos/
      Handler: getTodos
      Runtime: go1.x
      Events:
        getTodosApi:
          Type: Api
          Properties:
            Path: /todos
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref todoDB
  AddTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: addTodo/
      Handler: addTodo
      Runtime: go1.x
      Events:
        addTodoApi:
          Type: Api
          Properties:
            Path: /todos
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref todoDB
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: updateTodo/
      Handler: updateTodo
      Runtime: go1.x
      Events:
        addTodoApi:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: put
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref todoDB
  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: deleteTodo/
      Handler: deleteTodo
      Runtime: go1.x
      Events:
        addTodoApi:
          Type: Api
          Properties:
            Path: /todos/{id}
            Method: delete
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref todoDB

Outputs:
  TodoAPI:
    Description: "API Gateway endpoint URL for Prod environment for GetTodo Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos"
